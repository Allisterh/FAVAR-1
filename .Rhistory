summary.favar(fit,xvar = c(3,5))
ans <- summary.favar(fit,xvar = c(3,5))
library(devtools)
document()
document()
BGM(X,Y[,ncol(Y)])
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, niter = 10){
for (i in 1:niter) {
pc <- ExtrPC(X,K)$F0
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
X - pc
}
browser()
return(pc)
}
BGM(X,Y[,ncol(Y)])
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, niter = 10){
for (i in 1:niter) {
pc <- ExtrPC(X,K)$F0
browser()
if (i != 1){
pc - ans
ans <- pc
}
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
an - pc
}
return(pc)
}
BGM(X,Y[,ncol(Y)])
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, niter = 10){
for (i in 1:niter) {
pc <- ExtrPC(X,K)$F0
browser()
if (i != 1){
pc - ans
ans <- pc
}
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
}
return(pc)
}
BGM(X,Y[,ncol(Y)])
pc - ans
ans
pc
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 500, nburn = 100, K = 2, plag = 2, nhor = 20)
BGM(X,Y[,ncol(Y)])
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, niter = 10){
for (i in 1:niter) {
pc <- ExtrPC(X,K)$F0
browser()
if (i != 1){
pc - ans
}
ans <- pc
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
}
return(pc)
}
BGM(X,Y[,ncol(Y)])
pc - ans
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, nmax = 100){
tol <- i <- 1
while (any(tol > 0.1) | i <= nmax) {
pc <- ExtrPC(X,K)$F0
browser()
if (i != 1){
tol <- pc - ans
}
ans <- pc
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
i <- i + 1
}
return(pc)
}
BGM(X,Y[,ncol(Y)])
tol
tol
any(tol > 0.1)
tol
tol > 0.1
any(tol > 0.1)
?message
message("ABC", "DEF")
suppressMessages(message("ABC"))
testit <- function() {
message("testing package startup messages")
packageStartupMessage("initializing ...", appendLF = FALSE)
Sys.sleep(1)
packageStartupMessage(" done")
}
testit()
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, nmax = 100){
tol <- i <- 1
while (any(tol > 0.1)) {
pc <- ExtrPC(X,K)$F0
browser()
if (i != 1){
tol <- pc - ans
}
ans <- pc
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
i <- i + 1
if (i > nmax) {
message("reach max iterations, PCs don't converge")
break()
}
}
return(pc)
}
#'
#' \code{X} may include some information corralted with \code{R}. The function
#' extract factors from \code{X} which is not corralated with \code{R} by iteration
#' based on Boivin et al. (2009).
#'
#' @param X a large matrix from which principle components are extrated.
#' @param R a numerica vector which we are interesting in, for example interest rates.
#' @param K the number of extracted princple components.
#' @param niter the iterations, see details.
#' @details
BGM <- function(X,R, K = 2, nmax = 100){
tol <- i <- 1
while (any(tol > 0.1)) {
pc <- ExtrPC(X,K)$F0
# browser()
if (i != 1){
tol <- pc - ans
}
ans <- pc
xdata <- cbind(pc,R)
b <- solve(t(xdata) %*% xdata) %*% t(xdata) %*% X
X <- X - matrix(R,ncol = 1) %*% b[nrow(b),]
i <- i + 1
if (i > nmax) {
message("reach max iterations, PCs don't converge")
break()
}
}
return(pc)
}
BGM(X,Y[,ncol(Y)])
document()
document()
?BGM
document()
?BGM
?use_data
rm(list = ls())
library(pacman)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools)
devtools::load_all()
if (FALSE){
regdata <- readMat('../FAVAR_matlab/regdata.mat')
X <- regdata$X
Y <- regdata$Y
namesXY <- as.character(unlist(regdata$namesXY))
slowcode <- read.table('../FAVAR_matlab/slowcode.dat')
slowcode <- as.logical(unlist(slowcode))
save(X,Y,namesXY,slowcode, file = 'data-raw/regdata.rdata')
}else load('data-raw/regdata.rdata')
usethis::use_data(X,Y,slowcode, overwrite = TRUE)
## code to prepare `xdata` dataset goes here
rm(list = ls())
library(pacman)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools)
devtools::load_all()
if (FALSE){
regdata <- readMat('../FAVAR_matlab/regdata.mat')
X <- regdata$X
Y <- regdata$Y
namesXY <- as.character(unlist(regdata$namesXY))
slowcode <- read.table('../FAVAR_matlab/slowcode.dat')
slowcode <- as.logical(unlist(slowcode))
save(X,Y,namesXY,slowcode, file = 'data-raw/regdata.rdata')
}else load('data-raw/regdata.rdata')
nm <- namesXY[1:115]
nm[slowcode]
## code to prepare `xdata` dataset goes here
rm(list = ls())
library(pacman)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools)
devtools::load_all()
if (FALSE){
regdata <- readMat('../FAVAR_matlab/regdata.mat')
X <- regdata$X
Y <- regdata$Y
namesXY <- as.character(unlist(regdata$namesXY))
slowcode <- read.table('../FAVAR_matlab/slowcode.dat')
slowcode <- as.logical(unlist(slowcode))
save(X,Y,namesXY,slowcode, file = 'data-raw/regdata.rdata')
}else load('data-raw/regdata.rdata')
regdata <- cbind(X,Y)
colnames(regdata) <- namesXY
View(regdata)
regdata$slowcode <- slowcode
## code to prepare `xdata` dataset goes here
rm(list = ls())
library(pacman)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools)
devtools::load_all()
if (FALSE){
regdata <- readMat('../FAVAR_matlab/regdata.mat')
X <- regdata$X
Y <- regdata$Y
namesXY <- as.character(unlist(regdata$namesXY))
slowcode <- read.table('../FAVAR_matlab/slowcode.dat')
slowcode <- as.logical(unlist(slowcode))
save(X,Y,namesXY,slowcode, file = 'data-raw/regdata.rdata')
}else load('data-raw/regdata.rdata')
regdata <- cbind(X,Y)
colnames(regdata) <- namesXY
regdata['slowcode'] <- slowcode
## code to prepare `xdata` dataset goes here
rm(list = ls())
library(pacman)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools)
devtools::load_all()
if (FALSE){
regdata <- readMat('../FAVAR_matlab/regdata.mat')
X <- regdata$X
Y <- regdata$Y
namesXY <- as.character(unlist(regdata$namesXY))
slowcode <- read.table('../FAVAR_matlab/slowcode.dat')
slowcode <- as.logical(unlist(slowcode))
save(X,Y,namesXY,slowcode, file = 'data-raw/regdata.rdata')
}else load('data-raw/regdata.rdata')
regdata <- cbind(X,Y)
colnames(regdata) <- namesXY
regdata[,'slowcode'] <- slowcode
regdata[,'slowcode']
## code to prepare `xdata` dataset goes here
rm(list = ls())
library(pacman)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools)
devtools::load_all()
if (FALSE){
regdata <- readMat('../FAVAR_matlab/regdata.mat')
X <- regdata$X
Y <- regdata$Y
namesXY <- as.character(unlist(regdata$namesXY))
slowcode <- read.table('../FAVAR_matlab/slowcode.dat')
slowcode <- as.logical(unlist(slowcode))
save(X,Y,namesXY,slowcode, file = 'data-raw/regdata.rdata')
}else load('data-raw/regdata.rdata')
regdata <- cbind(X,Y) %>% as.data.frame()
colnames(regdata) <- namesXY
regdata$slowcode <- slowcode
regdata$slowcode <- c(slowcode,rep(NA,75))
View(regdata)
usethis::use_data(regdata, overwrite = TRUE)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 500, nburn = 100, K = 2, plag = 2, nhor = 20)
?MCMCpack::MCMCregress
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 500, nburn = 100, K = 2, plag = 2, nhor = 20)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
irfFAVAR(fit,118)
fit <- FAVAR(Y[,ncol(Y)], X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
fit <- FAVAR(Y[,ncol(Y)], X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
devtools::load_all()
fit <- FAVAR(Y[,ncol(Y)], X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
4 * matlab::eye(p)
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 2, nhor = 20)
irfFAVAR(fit,118)
View(fit)
irfFAVAR(fit,116)
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 20)
irfFAVAR(fit,116)
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48)
irfFAVAR(fit,116)
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 13, nhor = 48)
irfFAVAR(fit,116)
namesXY
irfFAVAR(fit,115)
irfFAVAR(fit,115)
irfFAVAR(fit,114)
Y
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091)
irfFAVAR(fit,114)
irfFAVAR(fit,115)
irfFAVAR(fit,116)
summary.favar(fit,xvar = c(3,5))
devtools::load_all()
summary.favar(fit,xvar = c(3,5))
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091)
?doParallel::registerDoParallel
?makeCluster
ncol(Y)
devtools::load_all()
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
imp
ans
?parallel::clusterApply
?foreach::foreach
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
devtools::load_all()
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
p_load(matlab,R.matlab,tidyverse,MyFun,bvartools,foreach)
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
View(imp)
parallel::stopCluster(cl)
?array
imp[[1]]
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
devtools::load_all()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
dim(fit$imp)
length(fit$imp)
length(fit$imp)
nrow(fit$imp[[1]])
ans <- array(0,dim = c(length(fit$imp),nrow(fit$imp[[1]]),ncol(fit$imp[[1]])))
for (i in 1:length(fit$imp)) {
ans[i,] <- fit$imp[[i]]
}
for (i in 1:length(fit$imp)) {
ans[i,,] <- fit$imp[[i]]
}
irf <- ans[,nvar,]
devtools::load_all()
irfFAVAR(fit,116)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
View(fit)
cbind(NULL,matrix(0,nrow = 3,ncol = 1))
cbind(NULL,NULL)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
varrlt <- BayesVAR(z, plag, iter = nrep+nburn, burnin = nburn, prior = varprior, type = 'none',ncores = 6)
devtools::load_all()
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
View(draw_a_sigma)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
View(draw_a_sigma)
View(draw_a_sigma)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
ans[[draw]]$a
ans[[draw]]
ans[[draw]]$a
ans[[1001]]$a
ans[[1001]]
draw_a_sigma[[draw]]$a
draw_a_sigma[[1001]]$a
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 1000, K = 2, plag = 2, nhor = 20,ncores = 6)
summary.favar(fit,xvar = c(3,5))
irfFAVAR(fit,116)
fit <- FAVAR(Y, X, slowcode,fctmethod = 'BBE',varprior = 'mn',
nrep = 30000, nburn = 5000, K = 2, plag = 2, nhor = 20,ncores = 6)
document()
fit <- FAVAR(matrix(Y[,ncol(Y)],ncol = 1), X, slowcode,fctmethod = 'BBE',varprior = 'none',
nrep = 5000, nburn = 1000, K = 3, plag = 7, nhor = 48, delta = 0.091,ncores = 6)
summary.favar(fit,xvar = c(3,5))
irfFAVAR(fit,116)
fit <- FAVAR(Y, X, slowcode = NULL,fctmethod = 'BGM',varprior = 'mn',
nrep = 30000, nburn = 5000, K = 2, plag = 2, nhor = 20,ncores = 6)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode = NULL,fctmethod = 'BGM',varprior = 'mn',
nrep = 30000, nburn = 5000, K = 2, plag = 2, nhor = 20,ncores = 6)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode = NULL,fctmethod = 'BGM',varprior = 'mn',
nrep = 30000, nburn = 5000, K = 2, plag = 2, nhor = 20,ncores = 6)
devtools::load_all()
fit <- FAVAR(Y, X, slowcode = NULL,fctmethod = 'BGM',varprior = 'mn',
nrep = 30000, nburn = 5000, K = 2, plag = 2, nhor = 20,ncores = 6)
summary.favar(fit,xvar = c(3,5))
irfFAVAR(fit,116)
fit <- FAVAR(Y, X, slowcode = NULL,fctmethod = 'BGM',varprior = 'mn',
nrep = 15000, nburn = 5000, K = 3, plag = 7, nhor = 20,ncores = 6)
summary.favar(fit,xvar = c(3,5))
devtools::load_all()
summary.favar(fit,xvar = c(3,5))
